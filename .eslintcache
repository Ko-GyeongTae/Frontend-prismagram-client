[{"/Users/ko-gyeongtae/Documents/prismagram-frontend/src/Components/App.js":"1","/Users/ko-gyeongtae/Documents/prismagram-frontend/src/index.js":"2","/Users/ko-gyeongtae/Documents/prismagram-frontend/src/Styles/GlobalStyles.js":"3","/Users/ko-gyeongtae/Documents/prismagram-frontend/src/Styles/Theme.js":"4","/Users/ko-gyeongtae/Documents/prismagram-frontend/src/Apollo/Client.js":"5","/Users/ko-gyeongtae/Documents/prismagram-frontend/src/Apollo/LocalState.js":"6","/Users/ko-gyeongtae/Documents/prismagram-frontend/src/Components/Footer.js":"7","/Users/ko-gyeongtae/Documents/prismagram-frontend/src/Components/Input.js":"8","/Users/ko-gyeongtae/Documents/prismagram-frontend/src/Routes/Feed.js":"9","/Users/ko-gyeongtae/Documents/prismagram-frontend/src/Routes/Auth/AuthContainer.js":"10","/Users/ko-gyeongtae/Documents/prismagram-frontend/src/Components/Button.js":"11","/Users/ko-gyeongtae/Documents/prismagram-frontend/src/Routes/Auth/AuthPresenter.js":"12","/Users/ko-gyeongtae/Documents/prismagram-frontend/src/Routes/Auth/AuthQueries.js":"13","/Users/ko-gyeongtae/Documents/prismagram-frontend/src/Hooks/useInput.js":"14","/Users/ko-gyeongtae/Documents/prismagram-frontend/src/Routes/Auth/index.js":"15","/Users/ko-gyeongtae/Documents/prismagram-frontend/src/Components/Icons.js":"16","/Users/ko-gyeongtae/Documents/prismagram-frontend/src/Components/Header.js":"17","/Users/ko-gyeongtae/Documents/prismagram-frontend/src/Components/Loader.js":"18","/Users/ko-gyeongtae/Documents/prismagram-frontend/src/Components/Post/PostContainer.js":"19","/Users/ko-gyeongtae/Documents/prismagram-frontend/src/Components/Post/PostPresenter.js":"20","/Users/ko-gyeongtae/Documents/prismagram-frontend/src/Components/Avatar.js":"21","/Users/ko-gyeongtae/Documents/prismagram-frontend/src/Components/FatText.js":"22","/Users/ko-gyeongtae/Documents/prismagram-frontend/src/Components/Routes.js":"23"},{"size":1160,"mtime":1611146455322,"results":"24","hashOfConfig":"25"},{"size":311,"mtime":1610976279109,"results":"26","hashOfConfig":"25"},{"size":733,"mtime":1611064393287,"results":"27","hashOfConfig":"25"},{"size":453,"mtime":1611064426125,"results":"28","hashOfConfig":"25"},{"size":314,"mtime":1611071294921,"results":"29","hashOfConfig":"25"},{"size":562,"mtime":1610978865803,"results":"30","hashOfConfig":"25"},{"size":1521,"mtime":1611109786341,"results":"31","hashOfConfig":"25"},{"size":814,"mtime":1611064299943,"results":"32","hashOfConfig":"25"},{"size":1434,"mtime":1611140560894,"results":"33","hashOfConfig":"25"},{"size":3193,"mtime":1611063673057,"results":"34","hashOfConfig":"25"},{"size":526,"mtime":1610981953297,"results":"35","hashOfConfig":"25"},{"size":2984,"mtime":1611140500398,"results":"36","hashOfConfig":"25"},{"size":781,"mtime":1611062862440,"results":"37","hashOfConfig":"25"},{"size":285,"mtime":1610987805659,"results":"38","hashOfConfig":"25"},{"size":75,"mtime":1611031166099,"results":"39","hashOfConfig":"25"},{"size":3928,"mtime":1611140311053,"results":"40","hashOfConfig":"25"},{"size":2448,"mtime":1611146273707,"results":"41","hashOfConfig":"25"},{"size":380,"mtime":1611110900242,"results":"42","hashOfConfig":"25"},{"size":1647,"mtime":1611142332412,"results":"43","hashOfConfig":"25"},{"size":1833,"mtime":1611141734468,"results":"44","hashOfConfig":"25"},{"size":744,"mtime":1611140700108,"results":"45","hashOfConfig":"25"},{"size":293,"mtime":1611140778643,"results":"46","hashOfConfig":"25"},{"size":853,"mtime":1611146496227,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"u3y5g4",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"70"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ko-gyeongtae/Documents/prismagram-frontend/src/Components/App.js",["99"],"/Users/ko-gyeongtae/Documents/prismagram-frontend/src/index.js",[],["100","101"],"/Users/ko-gyeongtae/Documents/prismagram-frontend/src/Styles/GlobalStyles.js",[],"/Users/ko-gyeongtae/Documents/prismagram-frontend/src/Styles/Theme.js",["102"],"/Users/ko-gyeongtae/Documents/prismagram-frontend/src/Apollo/Client.js",[],"/Users/ko-gyeongtae/Documents/prismagram-frontend/src/Apollo/LocalState.js",[],"/Users/ko-gyeongtae/Documents/prismagram-frontend/src/Components/Footer.js",["103"],"/Users/ko-gyeongtae/Documents/prismagram-frontend/src/Components/Input.js",[],"/Users/ko-gyeongtae/Documents/prismagram-frontend/src/Routes/Feed.js",["104"],"/Users/ko-gyeongtae/Documents/prismagram-frontend/src/Routes/Auth/AuthContainer.js",["105"],"import React, { useState } from \"react\";\nimport AuthPresenter from \"./AuthPresenter\";\nimport useInput from \"../../Hooks/useInput\";\nimport { CONFIRM_SECRET, CREATE_ACCOUNT, LOCAL_LOG_IN, LOG_IN } from \"./AuthQueries\";\nimport { useMutation } from \"react-apollo-hooks\";\nimport { toast } from \"react-toastify\";\n\nexport default () => {\n  const [action, setAction] = useState(\"logIn\");\n  const username = useInput(\"\");\n  const firstName = useInput(\"\");\n  const lastName = useInput(\"\");\n  const secret = useInput(\"\");\n  const email = useInput(\"\");\n  const [requestSecretMutation] = useMutation(LOG_IN, {\n    variables: { email: email.value }\n  });\n  const [createAccountMutation] = useMutation(CREATE_ACCOUNT, {\n    variables: {\n      email: email.value,\n      username: username.value,\n      firstName: firstName.value,\n      lastName: lastName.value\n    }\n  });\n  const [confirmSecretMutation] = useMutation(CONFIRM_SECRET, {\n      variables:{\n          email:email.value,\n          secret:secret.value\n      }\n  });\n  const [localLogInMutation] = useMutation(LOCAL_LOG_IN);\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    if (action === \"logIn\") {\n      if (email.value !== \"\") {\n        try {\n          const { data:{requestSecret} } = await requestSecretMutation();\n          if (!requestSecret) {\n            toast.error(\"You don't have an account yet, create one\");\n            setTimeout(() => setAction(\"signUp\"), 3000);\n          } else {\n            toast.success(\"Check your in box for your login secret\");\n            setAction(\"confirm\");\n          }\n        } catch {\n          toast.error(\"Can't request secret, try again\");\n        }\n      } else {\n        toast.error(\"Email is required\");\n      }\n    } else if (action === \"signUp\") {\n      if (\n        email.value !== \"\" &&\n        username.value !== \"\" &&\n        firstName.value !== \"\" &&\n        lastName.value !== \"\"\n      ) {\n        try {\n          const { data:{createAccount} } = await createAccountMutation();\n          if (!createAccount) {\n            toast.error(\"Can't create account\");\n          } else {\n            toast.success(\"Account created! Log In now\");\n            setTimeout(() => setAction(\"logIn\"), 3000);\n          }\n        } catch (e) {\n          toast.error(e.message);\n        }\n      } else {\n        toast.error(\"All field are required\");\n      }\n    } else if(action === \"confirm\"){\n        if(secret.value !== \"\"){\n            try{\n                const { data:{confirmSecret:token} } = await confirmSecretMutation();\n                if(token !== \"\" && token !== undefined){\n                    localLogInMutation({\n                        variables:{\n                            token\n                        }\n                    });\n                } else {\n                    throw Error()\n                }\n            } catch {\n                toast.error(\"Can't confirm secret, check again\");\n            }\n        }\n    }\n  };\n\n  return (\n    <AuthPresenter\n      setAction={setAction}\n      action={action}\n      username={username}\n      firstName={firstName}\n      lastName={lastName}\n      email={email}\n      secret={secret}\n      onSubmit={onSubmit}\n    />\n  );\n};\n",["106","107"],"/Users/ko-gyeongtae/Documents/prismagram-frontend/src/Components/Button.js",[],"/Users/ko-gyeongtae/Documents/prismagram-frontend/src/Routes/Auth/AuthPresenter.js",["108"],"import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport styled from \"styled-components\";\nimport Input from \"../../Components/Input\";\nimport Button from \"../../Components/Button\";\nimport icon from \"../../instagram_ico.png\";\n\nconst Wrapper = styled.div`\n  min-height: 80vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n`;\n\nconst Box = styled.div`\n  ${(props) => props.theme.whiteBox}\n  border-radius:0px;\n  width: 100%;\n  max-width: 350px;\n`;\n\nconst StateChanger = styled(Box)`\n  text-align: center;\n  padding: 20px 0px;\n`;\n\nconst Link = styled.span`\n  color: ${(props) => props.theme.blueColor};\n  cursor: pointer;\n`;\n\nconst Form = styled(Box)`\n  padding: 40px;\n  padding-bottom: 30px;\n  margin-bottom: 15px;\n  form {\n    width: 100%;\n    input {\n      width: 100%;\n      &:not(:last-child) {\n        margin-bottom: 7px;\n      }\n    }\n    button {\n      margin-top: 10px;\n    }\n  }\n`;\n\nconst Img = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 38px;\n`;\n\nexport default ({\n  action,\n  username,\n  firstName,\n  lastName,\n  email,\n  setAction,\n  onSubmit,\n  secret,\n}) => {\n  return (\n    <Wrapper>\n      <Form>\n        <Img>\n          <img src={icon} width=\"176px\" height=\"52px\" alt=\"instagram_ico\" />\n        </Img>\n        {action === \"logIn\" && (\n          <>\n            <Helmet>\n              <title>Log In | Prismagram</title>\n            </Helmet>\n            <form onSubmit={onSubmit}>\n              <Input placeholder={\"Email\"} {...email} type=\"email\" />\n              <Button text={\"Log in\"} />\n            </form>\n          </>\n        )}\n        {action === \"signUp\" && (\n          <>\n            <Helmet>\n              <title>Sign Up | Prismagram</title>\n            </Helmet>\n            <form onSubmit={onSubmit}>\n              <Input placeholder={\"First name\"} {...firstName} />\n              <Input placeholder={\"Last name\"} {...lastName} />\n              <Input placeholder={\"Email\"} {...email} type=\"email\" />\n              <Input placeholder={\"Username\"} {...username} />\n              <Button text={\"Sign up\"} />\n            </form>\n          </>\n        )}\n        {action === \"confirm\" && (\n          <>\n            <Helmet>\n              <title>Confirm Secret | Prismagram</title>\n            </Helmet>\n            <form onSubmit={onSubmit}>\n              <Input placeholder=\"Paste your secret\" required {...secret} />\n              <Button text={\"Confirm\"} />\n            </form>\n          </>\n        )}\n      </Form>\n      {action !== \"confirm\" && (\n        <StateChanger>\n          {action === \"logIn\" ? (\n            <>\n              Don't have an account?{\" \"}\n              <Link onClick={() => setAction(\"signUp\")}>Sign up</Link>\n            </>\n          ) : (\n            <>\n              Have an account?{\" \"}\n              <Link onClick={() => setAction(\"logIn\")}>Log in</Link>\n            </>\n          )}\n        </StateChanger>\n      )}\n    </Wrapper>\n  );\n};\n","/Users/ko-gyeongtae/Documents/prismagram-frontend/src/Routes/Auth/AuthQueries.js",[],"/Users/ko-gyeongtae/Documents/prismagram-frontend/src/Hooks/useInput.js",["109"],"/Users/ko-gyeongtae/Documents/prismagram-frontend/src/Routes/Auth/index.js",[],"/Users/ko-gyeongtae/Documents/prismagram-frontend/src/Components/Icons.js",[],"/Users/ko-gyeongtae/Documents/prismagram-frontend/src/Components/Header.js",[],"/Users/ko-gyeongtae/Documents/prismagram-frontend/src/Components/Loader.js",["110"],"/Users/ko-gyeongtae/Documents/prismagram-frontend/src/Components/Post/PostContainer.js",[],"/Users/ko-gyeongtae/Documents/prismagram-frontend/src/Components/Post/PostPresenter.js",["111"],"import React from \"react\";\nimport styled from \"styled-components\";\nimport FatText from \"../FatText\";\nimport Avatar from \"../Avatar\";\nimport { HeartFull, HeartEmpty, Comment } from \"../Icons\";\n\nconst Post = styled.div`\n  ${(props) => props.theme.whiteBox};\n  width: 100%;\n  max-width: 600px;\n  margin-bottom: 25px;\n`;\n\nconst Header = styled.header`\n  padding: 15px;\n  display: flex;\n  align-items: center;\n`;\n\nconst UserColumn = styled.div`\n  margin-left: 10px;\n`;\n\nconst Location = styled.span`\n  display: block;\n  margin-top: 5px;\n  font-size: 12px;\n`;\n\nconst Files = styled.div``;\n\nconst File = styled.img`\n  max-width: 100%;\n`;\n\nconst Button = styled.span`\n  cursor: pointer;\n`;\n\nconst Meta = styled.div`\n  padding: 15px;\n`;\n\nconst Buttons = styled.div`\n  ${Button} {\n    &:first-child {\n      margin-right: 10px;\n    }\n  }\n  margin-bottom: 10px;\n`;\n\nconst Timestamp = styled.span`\n  font-weight: 400;\n  text-transform: uppercase;\n  opacity: 0.5;\n  display: block;\n  font-size: 12px;\n  margin: 10px 0px;\n  padding-bottom: 10px;\n  border-bottom: ${(props) => props.theme.lightGreyColor} 1px solid;\n`;\n\nexport default ({\n  user: { username, avatar },\n  location,\n  files,\n  isLiked,\n  likeCount,\n  createdAt,\n}) => (\n  <Post>\n    <Header>\n      <Avatar size=\"sm\" url={avatar} />\n      <UserColumn>\n        <FatText text={username} />\n        <Location>{location}</Location>\n      </UserColumn>\n    </Header>\n    <Files>\n      {files && files.map((file) => <File key={file.id} id={file.id} src={file.url} />)}\n    </Files>\n    <Meta>\n      <Buttons>\n        <Button>{isLiked ? <HeartFull /> : <HeartEmpty />}</Button>\n        <Button>\n          <Comment />\n        </Button>\n      </Buttons>\n      <FatText text={likeCount === 1 ? \"1 like\" : `${likeCount} likes`} />\n      <Timestamp>{createdAt}</Timestamp>\n    </Meta>\n  </Post>\n);\n","/Users/ko-gyeongtae/Documents/prismagram-frontend/src/Components/Avatar.js",[],"/Users/ko-gyeongtae/Documents/prismagram-frontend/src/Components/FatText.js",[],"/Users/ko-gyeongtae/Documents/prismagram-frontend/src/Components/Routes.js",[],{"ruleId":"112","severity":1,"message":"113","line":26,"column":1,"nodeType":"114","endLine":47,"endColumn":3},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"112","severity":1,"message":"119","line":4,"column":1,"nodeType":"114","endLine":20,"endColumn":3},{"ruleId":"112","severity":1,"message":"113","line":33,"column":1,"nodeType":"114","endLine":72,"endColumn":3},{"ruleId":"112","severity":1,"message":"113","line":46,"column":1,"nodeType":"114","endLine":73,"endColumn":3},{"ruleId":"112","severity":1,"message":"113","line":8,"column":1,"nodeType":"114","endLine":106,"endColumn":3},{"ruleId":"115","replacedBy":"120"},{"ruleId":"117","replacedBy":"121"},{"ruleId":"112","severity":1,"message":"113","line":57,"column":1,"nodeType":"114","endLine":127,"endColumn":3},{"ruleId":"112","severity":1,"message":"113","line":3,"column":1,"nodeType":"114","endLine":14,"endColumn":2},{"ruleId":"112","severity":1,"message":"113","line":21,"column":1,"nodeType":"114","endLine":21,"endColumn":57},{"ruleId":"112","severity":1,"message":"113","line":64,"column":1,"nodeType":"114","endLine":94,"endColumn":3},"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-native-reassign",["122"],"no-negated-in-lhs",["123"],"Assign object to a variable before exporting as module default",["122"],["123"],"no-global-assign","no-unsafe-negation"]