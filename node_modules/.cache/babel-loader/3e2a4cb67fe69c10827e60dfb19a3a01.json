{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ko-gyeongtae/Documents/prismagram-frontend/src/Routes/Profile.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery } from \"react-apollo-hooks\";\nimport { withRouter } from \"react-router-dom\";\nimport Loader from \"../Components/Loader\";\nimport Avatar from \"../Components/Avatar\";\nconst GET_USER = gql`\n  query seeUser($username: String!) {\n    seeUser(username: $username) {\n      id\n      avatar\n      username\n      fullName\n      isFollowing\n      isSelf\n      bio\n      followingCount\n      followersCount\n      postsCount\n      posts {\n        id\n        files {\n          id\n          url\n        }\n        likeCount\n        commentCount\n      }\n    }\n  }\n`;\nconst Wrapper = styled.div`\n  min-height: 60vh;\n`;\n_c = Wrapper;\nconst Header = styled.header`\n\n`;\n_c2 = Header;\nconst HeaderColumn = styled.div`\n\n`;\n_c3 = HeaderColumn;\nexport default _c5 = withRouter(_c4 = _s(({\n  match: {\n    params: {\n      username\n    }\n  }\n}) => {\n  _s();\n\n  const {\n    data,\n    loading\n  } = useQuery(GET_USER, {\n    variables: {\n      username\n    }\n  });\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this);\n  } else {\n    console.log(data);\n    const {\n      seeUser: {\n        avatar,\n        username,\n        fullName,\n        isFollowing,\n        isSelf,\n        bio,\n        followingCount,\n        followersCount,\n        postsCount,\n        posts\n      }\n    } = data;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Header, {\n        children: /*#__PURE__*/_jsxDEV(HeaderColumn, {\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            size: \"lg\",\n            url: avatar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)\n    }, void 0, false);\n  }\n}, \"uHu6+Av6iz/Cemw652GCrFuaHvo=\", false, function () {\n  return [useQuery];\n}));\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"HeaderColumn\");\n$RefreshReg$(_c4, \"%default%$withRouter\");\n$RefreshReg$(_c5, \"%default%\");","map":{"version":3,"sources":["/Users/ko-gyeongtae/Documents/prismagram-frontend/src/Routes/Profile.js"],"names":["React","styled","gql","useQuery","withRouter","Loader","Avatar","GET_USER","Wrapper","div","Header","header","HeaderColumn","match","params","username","data","loading","variables","console","log","seeUser","avatar","fullName","isFollowing","isSelf","bio","followingCount","followersCount","postsCount","posts"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,MAAMC,QAAQ,GAAGL,GAAI;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAxBA;AA0BA,MAAMM,OAAO,GAAGP,MAAM,CAACQ,GAAI;AAC3B;AACA,CAFA;KAAMD,O;AAIN,MAAME,MAAM,GAAGT,MAAM,CAACU,MAAO;AAC7B;AACA,CAFA;MAAMD,M;AAIN,MAAME,YAAY,GAAGX,MAAM,CAACQ,GAAI;AAChC;AACA,CAFA;MAAMG,Y;AAIN,qBAAeR,UAAU,UACvB,CAAC;AACCS,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAE;AAAEC,MAAAA;AAAF;AADH;AADR,CAAD,KAIM;AAAA;;AACJ,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBd,QAAQ,CAACI,QAAD,EAAW;AAAEW,IAAAA,SAAS,EAAE;AAAEH,MAAAA;AAAF;AAAb,GAAX,CAAlC;;AACA,MAAIE,OAAJ,EAAa;AACX,wBACE,QAAC,OAAD;AAAA,6BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD,GAND,MAMO;AACLE,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACA,UAAM;AACJK,MAAAA,OAAO,EAAE;AACPC,QAAAA,MADO;AAEPP,QAAAA,QAFO;AAGPQ,QAAAA,QAHO;AAIPC,QAAAA,WAJO;AAKPC,QAAAA,MALO;AAMPC,QAAAA,GANO;AAOPC,QAAAA,cAPO;AAQPC,QAAAA,cARO;AASPC,QAAAA,UATO;AAUPC,QAAAA;AAVO;AADL,QAaFd,IAbJ;AAcA,wBACE;AAAA,6BACE,QAAC,MAAD;AAAA,+BACE,QAAC,YAAD;AAAA,iCACE,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,IAAb;AAAkB,YAAA,GAAG,EAAEM;AAAvB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,qBADF;AASD;AACF,CAvCsB;AAAA,UAMKnB,QANL;AAAA,GAAzB","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery } from \"react-apollo-hooks\";\nimport { withRouter } from \"react-router-dom\";\nimport Loader from \"../Components/Loader\";\nimport Avatar from \"../Components/Avatar\";\n\nconst GET_USER = gql`\n  query seeUser($username: String!) {\n    seeUser(username: $username) {\n      id\n      avatar\n      username\n      fullName\n      isFollowing\n      isSelf\n      bio\n      followingCount\n      followersCount\n      postsCount\n      posts {\n        id\n        files {\n          id\n          url\n        }\n        likeCount\n        commentCount\n      }\n    }\n  }\n`;\n\nconst Wrapper = styled.div`\n  min-height: 60vh;\n`;\n\nconst Header = styled.header`\n\n`;\n\nconst HeaderColumn = styled.div`\n\n`;\n\nexport default withRouter(\n  ({\n    match: {\n      params: { username },\n    },\n  }) => {\n    const { data, loading } = useQuery(GET_USER, { variables: { username } });\n    if (loading) {\n      return (\n        <Wrapper>\n          <Loader />\n        </Wrapper>\n      );\n    } else {\n      console.log(data);\n      const {\n        seeUser: {\n          avatar,\n          username,\n          fullName,\n          isFollowing,\n          isSelf,\n          bio,\n          followingCount,\n          followersCount,\n          postsCount,\n          posts,\n        },\n      } = data;\n      return (\n        <>\n          <Header>\n            <HeaderColumn>\n              <Avatar size=\"lg\" url={avatar} />\n            </HeaderColumn>\n          </Header>\n        </>\n      );\n    }\n  }\n);\n"]},"metadata":{},"sourceType":"module"}