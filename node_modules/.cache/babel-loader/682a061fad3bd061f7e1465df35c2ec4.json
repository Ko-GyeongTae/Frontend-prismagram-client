{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ko-gyeongtae/Documents/prismagram-frontend/src/Routes/Feed.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Helmet from \"rl-react-helmet\";\nimport styled from \"styled-components\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery } from \"react-apollo-hooks\";\nimport Loader from \"../Components/Loader\";\nimport Post from \"../Components/Post\";\nconst FEED_QUERY = gql`\n  {\n    seeFeed {\n      id\n      location\n      caption\n      user {\n        id\n        avatar\n        username\n      }\n      files {\n        id\n        url\n      }\n      likeCount\n      isLiked\n      comments {\n        id\n        text\n        user {\n          id\n          username\n        }\n      }\n      createdAt\n    }\n  }\n`;\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  min-height: 80vh;\n`;\n_c = Wrapper;\nexport default _s(() => {\n  _s();\n\n  const {\n    loading\n  } = useQuery(FEED_QUERY);\n  const client = useApolloClient();\n  const [feeds, setFeeds] = useState([]);\n\n  const get_feeds = async () => {\n    const {\n      data\n    } = await client.query({\n      query: FEED_QUERY\n    });\n    setFeeds(data.seeFeed);\n  };\n\n  console.log(data, loading);\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Feed | Prismagram\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 19\n    }, this), !loading && feeds && feeds.map(post => /*#__PURE__*/_jsxDEV(Post, {\n      id: post.id,\n      location: post.location,\n      caption: post.caption,\n      user: post.user,\n      files: post.files,\n      likeCount: post.likeCount,\n      isLiked: post.isLiked,\n      comments: post.comments,\n      createdAt: post.createdAt\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}, \"al5aD3n/Ck5Ql4ceE/2U7tS/2YQ=\", true, function () {\n  return [useQuery];\n});\n\nvar _c;\n\n$RefreshReg$(_c, \"Wrapper\");","map":{"version":3,"sources":["/Users/ko-gyeongtae/Documents/prismagram-frontend/src/Routes/Feed.js"],"names":["React","useState","Helmet","styled","gql","useQuery","Loader","Post","FEED_QUERY","Wrapper","div","loading","client","useApolloClient","feeds","setFeeds","get_feeds","data","query","seeFeed","console","log","map","post","id","location","caption","user","files","likeCount","isLiked","comments","createdAt"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AAEA,MAAMC,UAAU,GAAGJ,GAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA5BA;AA8BA,MAAMK,OAAO,GAAGN,MAAM,CAACO,GAAI;AAC3B;AACA;AACA;AACA;AACA,CALA;KAAMD,O;AAON,kBAAe,MAAM;AAAA;;AACnB,QAAM;AAAEE,IAAAA;AAAF,MAAcN,QAAQ,CAACG,UAAD,CAA5B;AACA,QAAMI,MAAM,GAAGC,eAAe,EAA9B;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,EAAD,CAAlC;;AACA,QAAMe,SAAS,GAAG,YAAW;AAC3B,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAML,MAAM,CAACM,KAAP,CAAa;AAACA,MAAAA,KAAK,EAACV;AAAP,KAAb,CAArB;AACAO,IAAAA,QAAQ,CAACE,IAAI,CAACE,OAAN,CAAR;AACD,GAHD;;AAIAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ,EAAkBN,OAAlB;AACA,sBACE,QAAC,OAAD;AAAA,4BACE,QAAC,MAAD;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,EAIGA,OAAO,iBAAI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAJd,EAKG,CAACA,OAAD,IACCG,KADD,IAECA,KAAK,CAACQ,GAAN,CAAWC,IAAD,iBACR,QAAC,IAAD;AAEE,MAAA,EAAE,EAAEA,IAAI,CAACC,EAFX;AAGE,MAAA,QAAQ,EAAED,IAAI,CAACE,QAHjB;AAIE,MAAA,OAAO,EAAEF,IAAI,CAACG,OAJhB;AAKE,MAAA,IAAI,EAAEH,IAAI,CAACI,IALb;AAME,MAAA,KAAK,EAAEJ,IAAI,CAACK,KANd;AAOE,MAAA,SAAS,EAAEL,IAAI,CAACM,SAPlB;AAQE,MAAA,OAAO,EAAEN,IAAI,CAACO,OARhB;AASE,MAAA,QAAQ,EAAEP,IAAI,CAACQ,QATjB;AAUE,MAAA,SAAS,EAAER,IAAI,CAACS;AAVlB,OACOT,IAAI,CAACC,EADZ;AAAA;AAAA;AAAA;AAAA,YADF,CAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CAjCD;AAAA,UACsBnB,QADtB;AAAA","sourcesContent":["import React, { useState } from \"react\";\nimport Helmet from \"rl-react-helmet\";\nimport styled from \"styled-components\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery } from \"react-apollo-hooks\";\nimport Loader from \"../Components/Loader\";\nimport Post from \"../Components/Post\";\n\nconst FEED_QUERY = gql`\n  {\n    seeFeed {\n      id\n      location\n      caption\n      user {\n        id\n        avatar\n        username\n      }\n      files {\n        id\n        url\n      }\n      likeCount\n      isLiked\n      comments {\n        id\n        text\n        user {\n          id\n          username\n        }\n      }\n      createdAt\n    }\n  }\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  min-height: 80vh;\n`;\n\nexport default () => {\n  const { loading } = useQuery(FEED_QUERY);\n  const client = useApolloClient();\n  const [feeds, setFeeds] = useState([]);\n  const get_feeds = async() => {\n    const {data} = await client.query({query:FEED_QUERY});\n    setFeeds(data.seeFeed);\n  }\n  console.log(data, loading);\n  return (\n    <Wrapper>\n      <Helmet>\n        <title>Feed | Prismagram</title>\n      </Helmet>\n      {loading && <Loader />}\n      {!loading &&\n        feeds &&\n        feeds.map((post) => (\n          <Post\n            key={post.id}\n            id={post.id}\n            location={post.location}\n            caption={post.caption}\n            user={post.user}\n            files={post.files}\n            likeCount={post.likeCount}\n            isLiked={post.isLiked}\n            comments={post.comments}\n            createdAt={post.createdAt}\n          />\n        ))}\n    </Wrapper>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}