{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ko-gyeongtae/Documents/prismagram-frontend/src/Routes/Profile/ProfileContainer.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { gql } from \"apollo-boost\";\nimport withRouter from \"react-router-dom/withRouter\";\nimport { useQuery } from \"react-apollo-hooks\";\nimport ProfilePresenter from \"./ProfilePresenter\";\nconst GET_USER = gql`\n  query seeUser($username: String!) {\n    seeUser(username: $username) {\n      id\n      avatar\n      username\n      fullName\n      isFollowing\n      isSelf\n      bio\n      followingCount\n      followersCount\n      postsCount\n      posts {\n        id\n        files {\n          url\n        }\n        likeCount\n        commentCount\n      }\n    }\n  }\n`;\nexport default _c2 = withRouter(_c = _s(({\n  match: {\n    params: {\n      username\n    }\n  }\n}) => {\n  _s();\n\n  const {\n    data,\n    loading\n  } = useQuery(GET_USER, {\n    variables: {\n      username\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(ProfilePresenter, {\n    loading: loading,\n    data: data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 12\n  }, this);\n}, \"uHu6+Av6iz/Cemw652GCrFuaHvo=\", false, function () {\n  return [useQuery];\n}));\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"%default%$withRouter\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/ko-gyeongtae/Documents/prismagram-frontend/src/Routes/Profile/ProfileContainer.js"],"names":["React","gql","withRouter","useQuery","ProfilePresenter","GET_USER","match","params","username","data","loading","variables"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AAEA,MAAMC,QAAQ,GAAGJ,GAAI;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAvBA;AAyBA,qBAAeC,UAAU,SACvB,CAAC;AACCI,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAE;AAAEC,MAAAA;AAAF;AADH;AADR,CAAD,KAIM;AAAA;;AACJ,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBP,QAAQ,CAACE,QAAD,EAAW;AAAEM,IAAAA,SAAS,EAAE;AAAEH,MAAAA;AAAF;AAAb,GAAX,CAAlC;AACA,sBAAO,QAAC,gBAAD;AAAkB,IAAA,OAAO,EAAEE,OAA3B;AAAoC,IAAA,IAAI,EAAED;AAA1C;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CARsB;AAAA,UAMKN,QANL;AAAA,GAAzB","sourcesContent":["import React from \"react\";\nimport { gql } from \"apollo-boost\";\nimport withRouter from \"react-router-dom/withRouter\";\nimport { useQuery } from \"react-apollo-hooks\";\nimport ProfilePresenter from \"./ProfilePresenter\";\n\nconst GET_USER = gql`\n  query seeUser($username: String!) {\n    seeUser(username: $username) {\n      id\n      avatar\n      username\n      fullName\n      isFollowing\n      isSelf\n      bio\n      followingCount\n      followersCount\n      postsCount\n      posts {\n        id\n        files {\n          url\n        }\n        likeCount\n        commentCount\n      }\n    }\n  }\n`;\n\nexport default withRouter(\n  ({\n    match: {\n      params: { username },\n    },\n  }) => {\n    const { data, loading } = useQuery(GET_USER, { variables: { username } });\n    return <ProfilePresenter loading={loading} data={data} />;\n  }\n);\n"]},"metadata":{},"sourceType":"module"}