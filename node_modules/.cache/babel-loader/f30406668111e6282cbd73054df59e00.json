{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ko-gyeongtae/Documents/prismagram-frontend/src/Routes/Auth/AuthContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport AuthPresenter from \"./AuthPresenter\";\nimport useInput from \"../../Hooks/useInput\";\nimport { CREATE_ACCOUNT, LOG_IN } from \"./AuthQueries\";\nimport { useMutation } from \"react-apollo-hooks\";\nimport { toast } from \"react-toastify\";\nexport default _s(() => {\n  _s();\n\n  const [action, setAction] = useState(\"logIn\");\n  const username = useInput(\"\");\n  const firstName = useInput(\"\");\n  const lastName = useInput(\"\");\n  const email = useInput(\"\");\n  const [requestSecretMutation] = useMutation(LOG_IN, {\n    variables: {\n      email: email.value\n    }\n  });\n  const [createAccountMutation] = useMutation(CREATE_ACCOUNT, {\n    variables: {\n      email: email.value,\n      username: username.value,\n      firstName: firstName.value,\n      lastName: lastName.value\n    }\n  });\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    if (action === \"logIn\") {\n      if (email.value !== \"\") {\n        try {\n          const {\n            data: {\n              requestSecret\n            }\n          } = await requestSecretMutation();\n\n          if (!requestSecret) {\n            toast.error(\"You don't have an account yet, create one\");\n            setTimeout(() => setAction(\"signup\"), 3000);\n          } else {\n            toast.success(\"Check your in box for your login secret\");\n          }\n        } catch {\n          toast.error(\"Can't request secret, try again\");\n        }\n      } else {\n        toast.error(\"Email is required\");\n      }\n    } else if (action === \"signUp\") {\n      if (email.value !== \"\" && username.value !== \"\" && firstName.value !== \"\" && lastName.value !== \"\") {\n        try {\n          const {\n            createAccount\n          } = await createAccountMutation();\n\n          if (!createAccount) {\n            toast.error(\"Can't create account\");\n          } else {\n            toast.success(\"Account created! Log In now\");\n            setTimeout(() => setAction(\"logIn\"), 3000);\n          }\n        } catch (e) {\n          toast.error(e.message);\n        }\n      } else {\n        toast.error(\"All field are required\");\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthPresenter, {\n    setAction: setAction,\n    action: action,\n    username: username,\n    firstName: firstName,\n    lastName: lastName,\n    email: email,\n    onSubmit: onSubmit\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}, \"7A8bwlSk4k5ulnLOeXlROX15qsc=\", false, function () {\n  return [useInput, useInput, useInput, useInput, useMutation, useMutation];\n});","map":{"version":3,"sources":["/Users/ko-gyeongtae/Documents/prismagram-frontend/src/Routes/Auth/AuthContainer.js"],"names":["React","useState","AuthPresenter","useInput","CREATE_ACCOUNT","LOG_IN","useMutation","toast","action","setAction","username","firstName","lastName","email","requestSecretMutation","variables","value","createAccountMutation","onSubmit","e","preventDefault","data","requestSecret","error","setTimeout","success","createAccount","message"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport AuthPresenter from \"./AuthPresenter\";\nimport useInput from \"../../Hooks/useInput\";\nimport { CREATE_ACCOUNT, LOG_IN } from \"./AuthQueries\";\nimport { useMutation } from \"react-apollo-hooks\";\nimport { toast } from \"react-toastify\";\n\nexport default () => {\n  const [action, setAction] = useState(\"logIn\");\n  const username = useInput(\"\");\n  const firstName = useInput(\"\");\n  const lastName = useInput(\"\");\n  const email = useInput(\"\");\n  const [requestSecretMutation] = useMutation(LOG_IN, {\n    variables: { email: email.value }\n  });\n  const [createAccountMutation] = useMutation(CREATE_ACCOUNT, {\n    variables: {\n      email: email.value,\n      username: username.value,\n      firstName: firstName.value,\n      lastName: lastName.value\n    }\n  });\n  const onSubmit = async e => {\n    e.preventDefault();\n    if (action === \"logIn\") {\n      if (email.value !== \"\") {\n        try {\n          const { data:{requestSecret} } = await requestSecretMutation();\n          if (!requestSecret) {\n            toast.error(\"You don't have an account yet, create one\");\n            setTimeout(() => setAction(\"signup\"), 3000);\n          } else {\n            toast.success(\"Check your in box for your login secret\");\n          }\n        } catch {\n          toast.error(\"Can't request secret, try again\");\n        }\n      } else {\n        toast.error(\"Email is required\");\n      }\n    } else if (action === \"signUp\") {\n      if (\n        email.value !== \"\" &&\n        username.value !== \"\" &&\n        firstName.value !== \"\" &&\n        lastName.value !== \"\"\n      ) {\n        try {\n          const { createAccount } = await createAccountMutation();\n          if (!createAccount) {\n            toast.error(\"Can't create account\");\n          } else {\n            toast.success(\"Account created! Log In now\");\n            setTimeout(() => setAction(\"logIn\"), 3000);\n          }\n        } catch (e) {\n          toast.error(e.message);\n        }\n      } else {\n        toast.error(\"All field are required\");\n      }\n    }\n  };\n\n  return (\n    <AuthPresenter\n      setAction={setAction}\n      action={action}\n      username={username}\n      firstName={firstName}\n      lastName={lastName}\n      email={email}\n      onSubmit={onSubmit}\n    />\n  );\n};\n"]},"metadata":{},"sourceType":"module"}